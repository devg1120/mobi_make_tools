<body><p>
A "goto" statement transfers control to the statement with the corresponding label
within the same function.
</p><pre>
[<a>GotoStmt</a>] = "goto" [<a>Label</a>] .
</pre><pre>
goto Error
</pre><p>
Executing the "goto" statement must not cause any variables to come into
[<a>scope</a>] that were not already in scope at the point of the goto.
For instance, this example:
</p><pre>
	goto L  // BAD
	v := 3
L:
</pre><p>
is erroneous because the jump to label <code>L</code> skips
the creation of <code>v</code>.
</p><p>
A "goto" statement outside a [<a>block</a>] cannot jump to a label inside that block.
For instance, this example:
</p><pre>
if n%2 == 1 {
	goto L1
}
for n > 0 {
	f()
	n--
L1:
	f()
	n--
}
</pre><p>
is erroneous because the label <code>L1</code> is inside
the "for" statement's block but the <code>goto</code> is not.
</p></body>